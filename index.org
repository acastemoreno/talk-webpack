* Slide Options                           :noexport:
# ======= Appear in cover-slide ====================
#+TITLE: Webpack
#+SUBTITLE: Module Bundler and Task Manager
#+COMPANY: Codeable
#+AUTHOR: Albert Castellano Moreno
#+EMAIL: acastemoreno@gmail.com

# ======= Appear in thank-you-slide ================
#+GITHUB: http://github.com/acastemoreno

# ======= Appear under each slide ==================
#+FAVICON: images/webpack.png
#+ICON: images/webpack.png
#+HASHTAG: #webpack

# ======= Google Analytics =========================
#+ANALYTICS: ----

# ======= Org settings =========================
#+EXCLUDE_TAGS: noexport
#+OPTIONS: toc:nil num:nil ^:nil
#+LANGUAGE: es
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="theme/css/custom.css" />

* Conceptos
  :PROPERTIES:
  :SLIDE:    segue dark quote
  :ASIDE:    right bottom
  :ARTICLE:  flexbox vleft auto-fadein
  :END:

** Conceptos
Bundler
  - Entry
  - Output
  - Loader
  - Mode

Task Manager
  - Plugin

** Instalación
#+BEGIN_SRC cmd
$ mkdir prueba-webpack && cd prueba-webpack
$ yarn init
...
$ yarn add webpack webpack-cli --dev
#+END_SRC

** Archivos base
#+BEGIN_SRC js
# package.json
{
#...
  "scripts": {
    "build": "webpack",
  },
#...
}
#+END_SRC

#+BEGIN_SRC js
# webpack.config.js
module.export = {
  # Most of the config go here
}
#+END_SRC

* Entry
  :PROPERTIES:
  :SLIDE:    segue dark quote
  :ASIDE:    right bottom
  :ARTICLE:  flexbox vleft auto-fadein
  :END:

** Entry
Punto de entrada en su funcionalidad como bundler. Solo archivos =js= o =json=
#+BEGIN_SRC js
# webpack.config.js
module.exports = {
  entry: './src/index.js' # Default setting
};
#+END_SRC

#+BEGIN_SRC js
# webpack.config.js
module.exports = {
  entry: {
    app: './src/app.js',
    adminApp: './src/adminApp.js'
  }
};
#+END_SRC

** Entry: todos los archivos de una carpeta
#+BEGIN_SRC js
# webpack.config.js
<b>const glob = require("glob");</b>

module.exports = {
  entry: <b>glob.sync("./src/js/*.js")</b>,
};
#+END_SRC

#+ATTR_HTML: :class note
#+BEGIN_QUOTE
Nota1[fn:1]
#+END_QUOTE

* Output
  :PROPERTIES:
  :SLIDE:    segue dark quote
  :ASIDE:    right bottom
  :ARTICLE:  flexbox vleft auto-fadein
  :END:

** Output
:PROPERTIES:
:ARTICLE:  smaller
:END:
Resultado final de la conversión de archivos indicados en =entry=
#+BEGIN_SRC js
module.exports = {
  output: {
    filename: './dist/main.js' # Default setting
  } 
};
#+END_SRC

#+BEGIN_SRC js
const path = require('path');

module.exports = {
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'holi-woli.js'
  }
};
#+END_SRC

** output: por cada archivo en entry
#+BEGIN_SRC js
const path = require("path");

module.exports = {
  output: {
    filename: "js/[name].js",
    path: path.resolve(__dirname, "dist"),
  },
};
#+END_SRC

#+ATTR_HTML: :class note
#+BEGIN_QUOTE
Nota2[fn:2]
#+END_QUOTE

** FIX multiple output files
:PROPERTIES:
:ARTICLE:  smaller
:END:
#+BEGIN_SRC js
const glob = require("glob");
const path = require("path");

<b>function toObject(paths) {
  var ret = {};
  paths.forEach(function (path) {
    // you can define entry names mapped to [name] here
    ret[path.split(/\/|\./).slice(-2)[0]] = path;
  });
  return ret;
}
</b>

module.exports = {
  entry: <b>toObject(glob.sync("./src/js/*.js"))</b>,
  output: {
    filename: "js/[name].js",
    path: path.resolve(__dirname, "dist"),
  },
};
#+END_SRC

#+ATTR_HTML: :class note
#+BEGIN_QUOTE
Nota3[fn:3]
#+END_QUOTE

* Thank You ʕ•ᴥ•ʔ
:PROPERTIES:
:SLIDE: thank-you-slide segue
:ASIDE: right
:ARTICLE: flexbox vleft auto-fadein
:END:


* Footnotes
[fn:1] Ejecutar =yarn run build= para revisar cual es el resultado. Demo branch "1"
[fn:2] Ejecutar =yarn run build= para revisar cual es el resultado. Demo branchs "2"
[fn:3] Ejecutar =yarn run build= para revisar cual es el resultado. Demo branchs "2-final"